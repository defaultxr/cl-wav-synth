CL-WAV-SYNTH: Express noises as you think


This is a copy of the sample tutorial available with
the 'Tutorial' command in cl-wav-synth.


WAV> ,Load As Sample _(pathname)_ synth.wav
  => Load a sample in the editor. Notice that you have the auto completion
with Tab or Space key.

WAV> ,Play
  => Play the current sample

WAV> ,Load As Sample _(pathname)_ bomb.wav
  => Load a sample in the editor

WAV> ,Play
  => Play the current sample

WAV> ,Set Length _(length)_ 100
  => Set the display sample length

WAV> ,Set Index _(index)_ 10000
  => Set the display sample index

WAV> ,Reset Bound Values
  => Adapt the display to the length of current sample

WAV> (help 'set-sample)
  => Show the help for the function set-sample

WAV> (set-sample (null-sample 0.01))
  => Set the current sample to a null sample of 0.01 seconds length

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> (help 'sinus-sample)
  => Show the help for the function sinus-sample

WAV> (set-sample (sinus-sample 0.01 1000))
  => Set the current sample to a sinus sample of 0.01 seconds length
and a frequency of 1000 Hz

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> (set-sample (noise-sample 1 100))
  => Set the current sample to a noise sample of 0.01 seconds length
and a frequency of 100 Hz

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> (set-sample
      (line-sample* 1 200 :ampls
                    '((0 0) (0.1 10000) (0.2 5000) (0.4 30000) (0.5 -5000)
                      (0.6 5000) (0.7 -10000) (0.8 -5000) (0.9 -20000) (1 0))))
  => Set the current sample to a line sample defined with ampls parameters.
For the first parameter of each control point, 0 is the period begining and
1 is the end. The second parameter is the amplitude value

WAV> ,Set Length _(length)_ 200
  => Set the display sample length

WAV> ,Set Amplitude _(amplitude)_ 40000
  => Set the display sample amplitude

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> (set-sample (env it (0 0) (0.1 1)))
  => Set the current sample envelope. First parameter in second
and the second parameter is the amplitude multiplicator

WAV> (set-sample (env it (0.1 1) (0.2 0.68)))
  => Set the current sample envelope. First parameter in second
and the second parameter is the amplitude multiplicator

WAV> (set-sample (env-sinus it :start 0.2 :period 3 :min 0.5))
  => Set the current sample envelope with a sinusoidale envelope.

WAV> (set-sample (env it (0.8 1) (1 0)))
  => Set the current sample envelope.

WAV> ,Play
  => Play the current sample

WAV> (set-sample (mix it (env (noise-sample 1.5 200) (0 0) (0.5 0.1) (1.5 1))))
  => Mix the current sample and a noise sample of 1.5 seconds length and 200 Hz
with a growing amplitude

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> ,Play
  => Play the current sample

WAV> ,Set Length _(Length)_ 150
  => Set the current length

WAV> ,Set Index _(Index)_ 10000
  => Set the current index

WAV> ,Add Sample Flag _(Number)_ 1 _(Index)_ 10054 _(Amplitude)_ 19660
  => Add a first sample flag

WAV> ,Add Sample Flag _(Number)_ 2 _(Index)_ 10100 _(Amplitude)_ 0
  => Add a second sample flag

WAV> (fi 1)
  => Get the index for the first sample flag

WAV> (fi 2)
  => Get the index for the second sample flag

WAV> (setf (fi 2) 10032)
  => Set the second flag index

WAV> (fi 2)
  => Get the index for the second sample flag

WAV> (ft 2)
  => Get the second flag time in seconds

WAV> (fa 2)
  => Get the second flag amplitude

WAV> (setf (fa 2) 8000)
  => Set the second flag amplitude

WAV> (fa 2)
  => Get the second flag amplitude

WAV> (help 'cut-i)
  => Show the cut-i function help

WAV> (set-sample (cut-i it (fi 2) (fi 1)))
  => Remove sample from flag 2 index to flag 1 index

WAV> ,Delete All Sample Flags
  => Delete All Sample Flags

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> (help 'octavify)
  => Show the octavify help

WAV> (set-sample (octavify it 1))
  => Set the sample to all tones

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> ,Play
  => Play the current sample

WAV> (undo)
  => Undo the last effect

WAV> (set-sample (octave-up it))
  => Set the sample to the next octave tone

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> ,Play
  => Play the current sample

WAV> (undo)
  => Undo the last effect

WAV> (set-sample
      (octavify it 0.8 '(:do :do :do :re :mi :re :do :mi :re :re :do)))
  => Set the sample to 'Au clair de la lune'

WAV> _,Reset Bound Values_
  => Adapt the display to the length of current sample

WAV> ,Play
  => Play the current sample

WAV> End of tutorial
  => Thanks to have looked at this tutorial



(This documentation has been automatically generated with the
function auto-doc-tutorial)

